项目提案：Project Chimera - AI赋能的英雄联盟Discord智能伴侣


--------------------------------------------------------------------------------


1.0 项目概述 (Project Overview)

“Project Chimera”项目的核心愿景是打造一款革命性的《英雄联盟》智能游戏伴侣与社区分析师，旨在超越市场上现有的传统数据查询机器人。本项目将深度集成Riot Games API，特别是利用Match-V5 Timeline接口进行精细化的赛后数据分析。通过结合先进的大型语言模型（LLM）和情感化语音合成（TTS）技术，Project Chimera将为用户提供富有洞察力、高度个性化且充满情感的交互体验。

我们的目标受众是广大《英雄联盟》玩家社群，特别是那些寻求深度游戏理解、渴望提升战术水平，并希望增强社区互动的玩家。本项目旨在通过智能化的数据解读与情感化的交流方式，重新定义游戏机器人的价值。

为了实现这一宏伟愿景，我们需要一个清晰的价值定位和功能规划，以下将详细阐述Project Chimera的核心价值所在。

2.0 核心价值与市场定位 (Core Value & Market Positioning)

在当前的《英雄联盟》社区生态中，已存在一些功能性的Discord机器人，例如基于Reddit帖子中提到的“阿狸机器人”，其主要功能集中于搬运U.GG等第三方网站的数据，提供基础的召唤师资料和比赛历史查询。Project Chimera的战略定位是通过引入AI驱动的深度分析和个性化交互，实现显著的差异化，从而在市场中脱颖而出。我们的目标不是简单的数据展示，而是成为能够深度理解每一场对局、并与玩家进行有意义交流的智能伙伴。

下表清晰地对比了传统机器人的功能局限性与Project Chimera的AI增强功能：

传统机器人的功能	Project Chimera的AI增强功能
基本召唤师资料查询：显示段位、胜率等表面数据。	从基本数据到综合表现评分： 我们的系统超越KDA，从经济、视野、团战贡献等多维度对玩家表现进行全面分析。
U.GG数据搬运：简单罗列通用出装和符文推荐。	从数据堆砌到可行性洞察： /讲道理指令提供叙事驱动的分析，为单场比赛生成深入、客观的复盘，指出关键转折点和改进建议。
简单的比赛历史展示：仅列出胜负和英雄数据。	从机械文本到沉浸式伴侣： 情感化TTS让分析栩栩如生，将关键事件和分析结果以带有情感的语音在频道中播报，并能根据用户历史进行个性化互动。

综上所述，Project Chimera凭借其独特的深度分析能力和AI赋能的交互体验，精准地填补了市场上高质量、智能化游戏伴侣的空白。其独特的价值主张在于，它不仅能帮助玩家提升对游戏的理解，更能通过创新的社区功能增强用户粘性，构建一个更具活力和竞争性的游戏社区。

接下来，我们将详细规划实现这一价值主张所需的关键功能。

3.0 主要功能规划 (Key Feature Plan)

本章节将详细介绍Project Chimera的核心功能模块。这些功能经过精心设计，共同构成了其作为新一代智能游戏伴侣的基石，旨在提供从个人数据绑定到深度社区互动的完整体验。

* 用户账户绑定 (/bind) 此功能是实现所有个性化服务的前提。它将通过Riot Games官方的Riot Sign On (RSO) OAuth流程，安全地将用户的Discord身份与其《英雄联盟》账户（PUUID）进行关联。这一官方流程确保了机器人绝不处理用户密码，完全依赖Riot的安全认证和用户授权，这对建立用户信任和保障项目安全至关重要。
* 核心分析指令 (/讲道理) 这是本项目的旗舰功能，也是其核心价值的集中体现。当用户输入此指令并指定一场比赛后，机器人将：
  1. 调用Riot API获取该场比赛的Match-V5 Timeline详细数据。
  2. 运用项目自研的赛后评分算法，对每位玩家的表现进行多维度量化评估。
  3. 将处理后的结构化数据与精心设计的系统提示（System Prompt）一同提交给Google Gemini大型语言模型。
  4. 生成一份对该场比赛的深度、客观且易于理解的分析复盘报告，并将其发送至频道。
* 社区互动功能 为了增强社区的趣味性和竞争氛围，项目将开发一系列基于分析数据的功能。例如，/排行榜指令将根据用户的综合评分生成服务器内的实力排名，而/通缉榜则可以设立趣味性的挑战目标（如“最高视野得分”），激励玩家间的良性竞争。
* 情感化语音播报 此功能旨在提升机器人的沉浸感和交互体验。它将利用先进的TTS技术（如豆包API），将/讲道理的分析结果、游戏内的关键事件（如五杀、抢龙）或社区榜单的更新，以带有适当情感的语音形式在用户所在的语音频道中播报，使用户仿佛拥有一个真正的游戏解说伴侣。

要实现这些复杂而强大的功能，一个稳健、可扩展的技术架构是必不可少的支撑。

4.0 技术架构与实现方案 (Technical Architecture & Implementation)

为确保项目的高性能、可维护性和未来扩展性，本项目将严格遵循**六边形架构（Hexagonal Architecture）**模式进行开发。这种架构模式的核心思想是将业务逻辑（领域核心）与外部依赖（如API客户端、数据库、UI）进行彻底解耦。通过定义清晰的端口与适配器，我们可以轻松地替换或升级外部组件，而无需改动核心业务代码，极大地提高了系统的可测试性和灵活性。

以下是本项目的核心技术栈选型：

组件类别	选定技术	作用与理由
核心框架	Python 3.12+, asyncio	利用现代Python的异步特性，确保在高并发环境下，机器人能够快速响应用户请求和处理实时事件，避免I/O阻塞。
Discord交互	discord.py	一个成熟、功能丰富的异步Discord API库，完美支持斜杠命令（Slash Commands）、延迟回复和语音频道交互，是构建高性能机器人的理想选择。
数据契约	Pydantic V2	通过对Match-V5 Timeline等复杂、深度嵌套的API响应强制执行类型安全来降低开发风险，从而预防常见的运行时数据解析错误。
AI与语言模型	Google Gemini	作为核心的自然语言处理和生成引擎，Gemini强大的理解与推理能力是实现/讲道理等深度分析功能的关键。
数据持久化	PostgreSQL (异步 asyncpg)	一个强大且可靠的关系型数据库，用于存储用户绑定信息（PUUID）、历史比赛分析结果、社区排行榜数据等需要持久化的信息。asyncpg库提供了高性能的异步支持。
缓存与任务队列	Redis, Celery/RQ	Redis将用于API响应缓存，以降低对Riot API的请求频率，并作为异步任务队列的消息代理。耗时的操作（如数据分析和AI推理）将通过Celery/RQ在后台Worker进程中处理，避免阻塞主程序。

通过以上技术选型，我们旨在构建一个高性能、高可用的系统架构，该架构旨在最大限度地减少未来的技术债务，并为长期的功能迭代速度提供可扩展的基础，为Project Chimera的长期发展奠定坚实的工程基础。

5.0 数据源与API集成策略 (Data Sources & API Integration Strategy)

本项目的成功高度依赖于与多个外部API的稳定、高效及合规集成。我们将采用严谨的策略来管理数据源，确保服务的可靠性和流畅的用户体验。

Riot Games API 集成

* 核心数据源: Riot Games API是本项目最核心的数据来源。我们将重点依赖以下两个接口：
  * Match-V5 Timeline: 这是实现深度赛后分析和评分体系的基石，提供了游戏内每一帧的详细事件数据。
  * Data Dragon: 用于获取所有游戏静态资源，如英雄、物品、符文的图标和多语言描述，是丰富前端展示和国际化的关键。
* 关键依赖 - 生产级API密钥: 获取并安全使用生产级API密钥 (Production API Key) 是项目能够成功上线的关键前置条件。与每24小时失效且速率极低的开发密钥（速率限制为每秒20次请求和每2分钟100次请求）相比，生产密钥提供了大幅提升的速率限制（例如，每10秒500次请求），这是支持一个面向公众的Discord机器人稳定运行的必要保障。值得注意的是，所有速率限制均按区域（per-region）执行，这对系统设计至关重要。
* 推荐集成库: 我们的分析表明，Cassiopeia尊重并遵守所有429响应中的Retry-After标头，以避免密钥被暂停，这是维持服务稳定性的关键。

Discord API 集成

* 我们将利用discord.py库来处理所有与Discord的交互。对于/讲道理等可能耗时较长的分析任务，我们将采用**延迟回复 (DEFERRED_CHANNEL_MESSAGE_WITH_SOURCE)机制。这意味着机器人在收到命令后会立即向用户发送一个“正在处理中...”的临时状态，以避免超过Discord 3秒的交互响应时限，随后再通过Webhook编辑或发送最终的分析结果。同时，正确使用延迟回复和稳健的错误处理对于避免超出Discord的无效请求限制（每10分钟10,000次）**也至关重要，该限制可能导致临时的“Cloudflare禁令”和服务中断。

清晰的数据源策略和强大的API集成方案，为项目的合规性与风险管理奠定了基础。

6.0 合规性与风险管理 (Compliance & Risk Management)

本项目将以最高标准严格遵守Riot Games发布的所有开发者政策、服务条款及“Legal Jibber Jabber”指南。我们深知合规性是项目长期稳定运行的基石，任何功能的设计与实现都将以此为前提。

以下是我们的核心合规承诺：

* 游戏诚信: 机器人提供的所有分析和数据均基于赛后数据。我们承诺绝不开发或提供任何可能在实时游戏中为玩家带来不公平竞争优势的功能，例如实时追踪敌方冷却时间或位置信息。
* 商业化政策: 任何潜在的商业化计划，例如为赞助用户提供自定义语音播报服务，都将严格遵循Riot的政策。这包括：事先通过书面形式通知Riot并获得批准，确保所提供的付费内容具有**“变革性”（Transformative）价值，并且必须为玩家提供一个免费的访问层级**。
* 知识产权 (IP) 使用: 我们承诺仅在Riot“Legal Jibber Jabber”政策允许的范围内使用其IP资产（如英雄图标、名称等）。所有面向公众的产品界面都将按照要求添加法律免责声明：“[Project Chimera] was created under Riot Games' 'Legal Jibber Jabber' policy using assets owned by Riot Games. Riot Games does not endorse or sponsor this project.”
* API密钥安全: 生产级API密钥是项目的核心资产。我们将通过环境变量进行安全管理，并采取一切必要措施防止其泄露，绝不会将其硬编码于代码库中。

主要风险与应对措施

风险点	可能性	影响	应对措施
生产API密钥申请延迟或被拒	中	高	提前准备详尽的产品原型、功能说明文档和合规性承诺，以支持API密钥申请。在开发初期，使用开发密钥进行功能验证，并设计可灵活配置的速率限制模块。此外，我们将准备一个功能受限的版本，该版本可在个人API密钥下运行，用于内部/封闭Beta测试，确保开发进度不会因申请流程而完全受阻。
Riot API政策变更	中	中	指派专人定期监控Riot开发者门户网站、官方Discord频道和博客。我们对六边形架构的审慎选择直接降低了这种风险。通过将外部API交互隔离在专用的“适配器”层中，政策变更将仅需修改该特定模块，而我们的核心业务逻辑不受影响，从而显著降低了适配的成本和复杂性。
核心功能开发技术难度	高	高	采用“四核CLI”并行开发模式：让“实验室(CLI 4)”角色专注于评分算法的原型设计和LLM Prompt的迭代与验证。通过测试驱动开发（TDD）和早期原型验证，主动降低核心功能（如评分算法）的技术不确定性。

通过主动的合规管理和风险应对，我们为项目的顺利推进提供了可靠的保障，并为下一阶段的开发制定了清晰的路线图。

7.0 开发路线图与里程碑 (Development Roadmap & Milestones)

本节将概述一个清晰、分阶段的开发计划，旨在确保Project Chimera能够按时、高质量地交付。此路线图基于项目的甘特图规划，将开发过程分解为四个关键阶段，每个阶段都有明确的目标和可交付的成果。

* 第一阶段：基础设施与架构搭建 (持续时间：约2周)
  * 核心目标: 建立一个稳固、可扩展的项目基础，为后续所有开发工作提供支撑。
  * 关键交付成果:
    * 完成Poetry项目环境配置与依赖管理。
    * 建立CI/CD自动化流程，集成Ruff、MyPy和pre-commit hooks。
    * 搭建完整的六边形架构骨架（Core, Adapters, Contracts）。
    * 定义核心的Pydantic数据契约，特别是与Riot API响应相关的模型。
* 第二阶段：核心连接与数据获取 (持续时间：约3周)
  * 核心目标: 打通与所有外部系统的连接，实现核心数据的获取与持久化。
  * 关键交付成果:
    * 实现健壮的Riot API适配器，集成Cassiopeia并处理速率限制。
    * 完成基于Riot Sign On (RSO)的用户绑定功能/bind的完整逻辑。
    * 成功抓取、解析并存储Match-V5 Timeline数据至PostgreSQL数据库。
* 第三阶段：AI赋能与核心功能实现 (持续时间：约3周)
  * 核心目标: 实现项目的核心价值，将数据转化为富有洞察力的分析。
  * 关键交付成果:
    * 完成赛后评分算法的V1版本设计与实现。
    * 交付核心功能/讲道理的初步可用版本，能够生成由Gemini驱动的比赛复盘报告。
* 第四阶段：社区功能与体验优化 (持续时间：约2周)
  * 核心目标: 增强用户互动性，并通过多媒体交互提升产品体验。
  * 关键交付成果:
    * 上线/排行榜和/通缉榜等社区互动功能。
    * 成功集成TTS（豆包API），实现情感化的语音播报功能。

该路线图为Project Chimera的成功交付提供了一条清晰、务实且可执行的路径。

8.0 结论与项目批准请求 (Conclusion & Request for Approval)

Project Chimera不仅仅是一个传统的数据查询工具，它代表了游戏社区交互的未来方向。通过将深度数据分析、大型语言模型和情感化语音技术相结合，我们旨在创造一个能够真正理解游戏、赋能玩家并提升社区质量的AI智能伴侣。本提案详细阐述了项目的独特价值主张、清晰的功能规划、稳健的技术架构以及全面的合规与风险管理策略。

我们坚信，Project Chimera在技术上是可行的，在市场上具有独特的差异化优势，并且严格遵守Riot Games的开发者政策。它的成功将为《英雄联盟》社区带来前所未有的价值，显著提升玩家的游戏体验和社区粘性。

在此，我们正式向各位利益相关者提出请求，希望能够批准“Project Chimera”的立项。我们期待能够立即启动开发工作，将这一创新愿景变为现实，为广大《英雄联盟》玩家带来一款真正属于他们的智能游戏伙伴。
